from os import walk
import pandas as pd

def read_smartbugs_curated_dataset():
    """Read """
    programs = []
    path = "smartbugs-curated/dataset/all_normalized"
    contract_texts = []
    contract_text = ""
    filenames = next(walk(path), (None, None, []))[2]  # [] if no file
    for i,filename in enumerate(filenames):
        file = open(path+"/"+filename, "r")
        content = file.read()
        programs.append(content)
        file.close()
        
    smart_contracts_programs_df =  pd.DataFrame({"contract_name":filenames,"contract_code":programs})
    return smart_contracts_programs_df


def read_ethereum_smart_contracts():
    conracts_data_dict = {}
    foldernames = next(walk("ethereum_smart_contracts/"), (None, None, []))[1]  
    for foldername in foldernames:
        splited = foldername.split("_")
        vulnerability = "_".join(splited[:-1])
        path = "ethereum_smart_contracts/" + foldername
        filenames = next(walk(path), (None, None, []))[2]
        for filename in filenames:
            try: 
                file = open(path+"/"+filename, "r")
                content = file.read()
                # add contract data
                contract_name = "ethereum_" + filename
                if contract_name in conracts_data_dict.keys(): 
                    conracts_data_dict[contract_name][1].append(vulnerability)
                else:
                    conracts_data_dict[contract_name] = [content, [vulnerability]]
                file.close()
            except:
                print(path+"/"+filename)
    # return a dataframe with all the data
    contact_names = conracts_data_dict.keys()
    contracts_data = [conracts_data_dict[k][0] for k in conracts_data_dict.keys()]
    contract_vulnerabilities = [conracts_data_dict[k][1] for k in conracts_data_dict.keys()]
    del(conracts_data_dict)
    return pd.DataFrame({"contact_name":contact_names,"contract_code":contracts_data,"vulnerabilities":contract_vulnerabilities})