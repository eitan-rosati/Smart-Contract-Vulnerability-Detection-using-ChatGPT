contract_name,Reentrancy,Access_Control,Arithmetic,Unchecked_Return_Values,Denial_Of_Service,Bad_Randomness,Front_Running,Time_Manipulation,Short_Address_Attack,description
reentrancy_bonus.sol,0,0,1,0,0,0,0,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential short address attack due to direct use of address type without checking the input size."
0xb11b2fed6c9354f7aa2f658d3b4d7b31d8a13b77.sol,0,1,1,0,0,0,1,0,1,"Access control risk: use of tx.origin which can be exploited under certain conditions. | Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol,0,0,1,0,0,0,0,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential short address attack due to direct use of address type without checking the input size."
ether_lotto.sol,0,0,1,0,1,1,1,1,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Risks due to bad randomness; block properties used for randomness can be manipulated by miners. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Time manipulation risk due to dependency on block.timestamp, which can be slightly manipulated by miners. | Potential short address attack due to direct use of address type without checking the input size."
0x78c2a1e91b52bca4130b6ed9edd9fbcfd4671c37.sol,0,0,0,0,0,0,1,0,1,Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size.
random_number_generator.sol,0,0,1,0,1,1,0,1,0,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Risks due to bad randomness; block properties used for randomness can be manipulated by miners. | Time manipulation risk due to dependency on block.timestamp, which can be slightly manipulated by miners."
0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol,1,0,1,1,0,0,1,0,1,"Potential reentrancy vulnerability detected due to use of .call() in combination with state changes. | Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
token.sol,0,0,1,0,0,0,1,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
0x4051334adc52057aca763453820cb0e045076ef3.sol,1,0,1,1,1,0,1,0,1,"Potential reentrancy vulnerability detected due to use of .call() in combination with state changes. | Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
0x8c7777c45481dba411450c228cb692ac3d550344.sol,0,0,1,0,0,0,0,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential short address attack due to direct use of address type without checking the input size."
0xbaf51e761510c1a11bf48dd87c0307ac8a8c8a4f.sol,0,0,1,0,0,0,0,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential short address attack due to direct use of address type without checking the input size."
roulette.sol,0,0,0,0,0,0,1,0,0,Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions.
overflow_single_tx.sol,0,0,1,0,0,0,0,0,0,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath."
0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol,0,0,1,0,0,0,0,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential short address attack due to direct use of address type without checking the input size."
0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol,0,1,1,0,1,1,1,0,1,"Access control risk: use of tx.origin which can be exploited under certain conditions. | Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Risks due to bad randomness; block properties used for randomness can be manipulated by miners. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
0x0cbe050f75bc8f8c2d6c0d249fea125fd6e1acc9.sol,0,0,0,1,0,0,0,0,1,"Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Potential short address attack due to direct use of address type without checking the input size."
multiowned_vulnerable.sol,0,0,0,0,0,0,1,0,1,Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size.
0xa46edd6a9a93feec36576ee5048146870ea2c3ae.sol,1,0,1,1,1,0,1,0,1,"Potential reentrancy vulnerability detected due to use of .call() in combination with state changes. | Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
0x52d2e0f9b01101a59b38a3d05c80b7618aeed984.sol,0,0,1,0,1,0,1,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
ERC20.sol,0,0,1,0,1,0,1,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol,1,0,1,1,0,0,1,0,1,"Potential reentrancy vulnerability detected due to use of .call() in combination with state changes. | Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
integer_overflow_minimal.sol,0,0,1,0,0,0,0,0,0,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath."
0x3e013fc32a54c4c5b6991ba539dcd0ec4355c859.sol,0,0,0,0,0,0,1,0,1,Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size.
0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol,0,0,1,1,1,0,1,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
lottery.sol,0,0,1,1,1,0,1,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
0x4b71ad9c1a84b9b643aa54fdd66e2dec96e8b152.sol,1,0,1,1,1,0,1,0,1,"Potential reentrancy vulnerability detected due to use of .call() in combination with state changes. | Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
reentrance.sol,0,0,1,0,0,0,0,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential short address attack due to direct use of address type without checking the input size."
lottopollo.sol,0,0,1,1,0,1,1,1,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Risks due to bad randomness; block properties used for randomness can be manipulated by miners. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Time manipulation risk due to dependency on block.timestamp, which can be slightly manipulated by miners. | Potential short address attack due to direct use of address type without checking the input size."
integer_overflow_add.sol,0,0,1,0,0,0,0,0,0,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath."
reentrancy_dao.sol,0,0,1,0,0,0,0,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential short address attack due to direct use of address type without checking the input size."
FindThisHash.sol,0,0,0,0,0,0,1,0,0,Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions.
modifier_reentrancy.sol,0,0,1,0,0,0,0,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential short address attack due to direct use of address type without checking the input size."
0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol,0,0,1,1,1,1,1,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Risks due to bad randomness; block properties used for randomness can be manipulated by miners. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
dos_address.sol,0,0,1,0,1,0,0,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Potential short address attack due to direct use of address type without checking the input size."
old_blockhash.sol,0,0,1,0,1,1,1,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Risks due to bad randomness; block properties used for randomness can be manipulated by miners. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
insecure_transfer.sol,0,0,1,0,0,0,1,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol,0,1,1,0,0,0,0,0,1,"Access control risk: use of tx.origin which can be exploited under certain conditions. | Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential short address attack due to direct use of address type without checking the input size."
0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol,0,0,1,0,1,0,0,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Potential short address attack due to direct use of address type without checking the input size."
integer_overflow_benign_1.sol,0,0,1,0,0,0,0,0,0,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath."
0x524960d55174d912768678d8c606b4d50b79d7b1.sol,1,0,0,1,0,0,1,0,1,"Potential reentrancy vulnerability detected due to use of .call() in combination with state changes. | Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
etherpot_lotto.sol,0,0,1,1,1,1,1,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Risks due to bad randomness; block properties used for randomness can be manipulated by miners. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol,0,1,1,0,1,1,1,0,1,"Access control risk: use of tx.origin which can be exploited under certain conditions. | Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Risks due to bad randomness; block properties used for randomness can be manipulated by miners. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
reentrancy_cross_function.sol,0,0,1,0,0,0,1,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
etheraffle.sol,0,0,1,0,1,0,1,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
phishable.sol,0,1,0,0,0,0,1,0,1,Access control risk: use of tx.origin which can be exploited under certain conditions. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size.
0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol,1,0,1,1,0,0,1,0,1,"Potential reentrancy vulnerability detected due to use of .call() in combination with state changes. | Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
reentrancy_simple.sol,0,0,1,0,0,0,0,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential short address attack due to direct use of address type without checking the input size."
0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol,0,0,1,0,0,1,1,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Risks due to bad randomness; block properties used for randomness can be manipulated by miners. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
incorrect_constructor_name1.sol,0,0,0,0,0,0,1,0,1,Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size.
wallet_03_wrong_constructor.sol,0,0,1,0,0,0,1,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
0x941d225236464a25eb18076df7da6a91d0f95e9e.sol,0,0,1,0,0,0,0,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential short address attack due to direct use of address type without checking the input size."
0xe82f0742a71a02b9e9ffc142fdcb6eb1ed06fb87.sol,0,0,0,0,0,0,1,0,1,Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size.
0x2972d548497286d18e92b5fa1f8f9139e5653fd2.sol,1,0,1,1,1,0,1,0,1,"Potential reentrancy vulnerability detected due to use of .call() in combination with state changes. | Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
0xd5967fed03e85d1cce44cab284695b41bc675b5c.sol,1,0,1,1,1,0,1,0,1,"Potential reentrancy vulnerability detected due to use of .call() in combination with state changes. | Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
0xdb1c55f6926e7d847ddf8678905ad871a68199d2.sol,0,0,0,0,0,0,1,0,1,Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size.
timelock.sol,0,0,1,0,0,0,1,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
etherstore.sol,0,0,1,0,0,0,0,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential short address attack due to direct use of address type without checking the input size."
incorrect_constructor_name2.sol,0,0,0,0,0,0,1,0,1,Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size.
lotto.sol,0,0,0,1,0,0,1,0,1,"Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
dos_number.sol,0,0,1,0,1,0,0,0,0,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas."
integer_overflow_1.sol,0,0,1,0,0,0,0,0,0,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath."
eth_tx_order_dependence_minimal.sol,0,0,0,0,0,0,1,0,1,Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size.
0x70f9eddb3931491aab1aeafbc1e7f1ca2a012db4.sol,0,0,0,0,0,0,1,0,1,Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size.
0x4a66ad0bca2d700f11e1f2fc2c106f7d3264504c.sol,1,0,1,1,1,0,1,0,1,"Potential reentrancy vulnerability detected due to use of .call() in combination with state changes. | Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
incorrect_constructor_name3.sol,0,0,0,0,0,0,1,0,1,Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size.
integer_overflow_mapping_sym_1.sol,0,0,1,0,0,0,0,0,0,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath."
0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol,0,0,1,0,1,0,1,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
proxy.sol,0,0,0,0,1,0,0,0,1,Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Potential short address attack due to direct use of address type without checking the input size.
0x39cfd754c85023648bf003bea2dd498c5612abfa.sol,1,0,1,1,0,0,1,0,1,"Potential reentrancy vulnerability detected due to use of .call() in combination with state changes. | Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
send_loop.sol,0,0,1,1,1,0,1,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
0xf29ebe930a539a60279ace72c707cba851a57707.sol,0,0,0,0,0,0,1,0,1,Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size.
mishandled.sol,0,0,0,1,0,0,1,0,1,"Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
parity_wallet_bug_1.sol,0,0,1,0,1,0,0,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Potential short address attack due to direct use of address type without checking the input size."
governmental_survey.sol,0,0,1,1,0,1,1,1,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Risks due to bad randomness; block properties used for randomness can be manipulated by miners. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Time manipulation risk due to dependency on block.timestamp, which can be slightly manipulated by miners. | Potential short address attack due to direct use of address type without checking the input size."
blackjack.sol,0,0,1,1,1,1,1,1,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Risks due to bad randomness; block properties used for randomness can be manipulated by miners. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Time manipulation risk due to dependency on block.timestamp, which can be slightly manipulated by miners. | Potential short address attack due to direct use of address type without checking the input size."
list_dos.sol,0,0,1,1,1,1,1,1,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Risks due to bad randomness; block properties used for randomness can be manipulated by miners. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Time manipulation risk due to dependency on block.timestamp, which can be slightly manipulated by miners. | Potential short address attack due to direct use of address type without checking the input size."
0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol,0,0,1,0,0,0,0,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential short address attack due to direct use of address type without checking the input size."
spank_chain_payment.sol,1,0,1,1,1,0,1,0,1,"Potential reentrancy vulnerability detected due to use of .call() in combination with state changes. | Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
0x89c1b3807d4c67df034fffb62f3509561218d30b.sol,0,0,1,1,1,0,1,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
parity_wallet_bug_2.sol,0,0,1,0,1,0,0,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Potential short address attack due to direct use of address type without checking the input size."
overflow_simple_add.sol,0,0,1,0,0,0,0,0,0,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath."
0xbebbfe5b549f5db6e6c78ca97cac19d1fb03082c.sol,0,1,1,0,0,0,1,0,1,"Access control risk: use of tx.origin which can be exploited under certain conditions. | Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
wallet_04_confused_sign.sol,0,0,1,0,1,0,1,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
odds_and_evens.sol,0,0,1,1,1,0,1,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
integer_overflow_mul.sol,0,0,1,0,0,0,0,0,0,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath."
lucky_doubler.sol,0,0,1,1,1,1,1,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Risks due to bad randomness; block properties used for randomness can be manipulated by miners. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
0xbaa3de6504690efb064420d89e871c27065cdd52.sol,0,1,1,0,0,0,1,0,1,"Access control risk: use of tx.origin which can be exploited under certain conditions. | Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
crypto_roulette.sol,0,0,1,0,0,1,1,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Risks due to bad randomness; block properties used for randomness can be manipulated by miners. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
tokensalechallenge.sol,0,0,1,0,0,0,1,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol,0,0,1,0,0,0,0,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential short address attack due to direct use of address type without checking the input size."
0x5aa88d2901c68fda244f1d0584400368d2c8e739.sol,0,0,0,0,0,0,1,0,1,Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size.
0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol,0,0,1,0,0,0,0,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential short address attack due to direct use of address type without checking the input size."
0x3f2ef511aa6e75231e4deafc7a3d2ecab3741de2.sol,0,0,0,0,0,0,1,0,1,Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size.
0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol,0,0,1,0,0,0,0,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential short address attack due to direct use of address type without checking the input size."
0x610495793564aed0f9c7fc48dc4c7c9151d34fd6.sol,0,0,1,0,0,0,1,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
0x7a4349a749e59a5736efb7826ee3496a2dfd5489.sol,0,0,0,0,0,0,1,0,1,Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size.
0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol,0,0,1,0,0,0,0,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential short address attack due to direct use of address type without checking the input size."
0xb37f18af15bafb869a065b61fc83cfc44ed9cc27.sol,0,0,1,0,0,0,1,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
0xe4eabdca81e31d9acbc4af76b30f532b6ed7f3bf.sol,0,0,0,0,0,0,1,0,1,Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size.
name_registrar.sol,0,0,0,0,0,0,0,0,1,Potential short address attack due to direct use of address type without checking the input size.
FibonacciBalance.sol,0,0,1,0,1,0,1,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol,0,0,1,0,0,0,0,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential short address attack due to direct use of address type without checking the input size."
0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol,0,0,1,0,0,0,0,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential short address attack due to direct use of address type without checking the input size."
king_of_the_ether_throne.sol,0,0,1,1,1,1,1,1,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Risks due to bad randomness; block properties used for randomness can be manipulated by miners. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Time manipulation risk due to dependency on block.timestamp, which can be slightly manipulated by miners. | Potential short address attack due to direct use of address type without checking the input size."
timed_crowdsale.sol,0,0,0,0,0,1,0,1,0,"Risks due to bad randomness; block properties used for randomness can be manipulated by miners. | Time manipulation risk due to dependency on block.timestamp, which can be slightly manipulated by miners."
0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol,0,0,1,0,0,0,1,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
unprotected0.sol,0,0,0,0,0,0,0,0,1,Potential short address attack due to direct use of address type without checking the input size.
0x663e4229142a27f00bafb5d087e1e730648314c3.sol,0,0,1,1,1,1,1,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Risks due to bad randomness; block properties used for randomness can be manipulated by miners. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
0xf70d589d76eebdd7c12cc5eec99f8f6fa4233b9e.sol,0,0,0,0,0,0,1,0,1,Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size.
integer_overflow_multitx_multifunc_feasible.sol,0,0,1,0,0,0,0,0,0,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath."
0x561eac93c92360949ab1f1403323e6db345cbf31.sol,0,0,1,0,0,0,0,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential short address attack due to direct use of address type without checking the input size."
0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol,0,0,1,0,0,0,0,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential short address attack due to direct use of address type without checking the input size."
auction.sol,0,0,0,1,1,0,1,0,1,"Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
0xec329ffc97d75fe03428ae155fc7793431487f63.sol,0,0,1,0,1,0,1,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
dos_simple.sol,0,0,1,0,1,0,0,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Potential short address attack due to direct use of address type without checking the input size."
open_address_lottery.sol,0,0,1,0,1,1,1,1,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Risks due to bad randomness; block properties used for randomness can be manipulated by miners. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Time manipulation risk due to dependency on block.timestamp, which can be slightly manipulated by miners. | Potential short address attack due to direct use of address type without checking the input size."
0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol,0,0,1,0,0,0,0,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential short address attack due to direct use of address type without checking the input size."
rubixi.sol,0,0,1,1,1,0,1,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
0xf2570186500a46986f3139f65afedc2afe4f445d.sol,1,0,1,1,1,0,0,0,1,"Potential reentrancy vulnerability detected due to use of .call() in combination with state changes. | Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Potential short address attack due to direct use of address type without checking the input size."
arbitrary_location_write_simple.sol,0,0,1,0,0,0,0,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential short address attack due to direct use of address type without checking the input size."
smart_billions.sol,0,0,1,0,1,1,1,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Risks due to bad randomness; block properties used for randomness can be manipulated by miners. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
unchecked_return_value.sol,0,0,0,1,0,0,0,0,1,"Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Potential short address attack due to direct use of address type without checking the input size."
0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol,0,0,1,0,0,0,0,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential short address attack due to direct use of address type without checking the input size."
0xd2018bfaa266a9ec0a1a84b061640faa009def76.sol,0,0,0,0,0,0,1,0,1,Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size.
0xa1fceeff3acc57d257b917e30c4df661401d6431.sol,1,0,1,1,1,0,1,0,1,"Potential reentrancy vulnerability detected due to use of .call() in combination with state changes. | Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
reentrancy_insecure.sol,0,0,0,0,0,0,0,0,1,Potential short address attack due to direct use of address type without checking the input size.
0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol,1,0,1,1,1,0,1,0,1,"Potential reentrancy vulnerability detected due to use of .call() in combination with state changes. | Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
etherbank.sol,0,0,1,0,0,0,0,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential short address attack due to direct use of address type without checking the input size."
short_address_example.sol,0,1,1,0,0,0,0,0,1,"Access control risk: use of tx.origin which can be exploited under certain conditions. | Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential short address attack due to direct use of address type without checking the input size."
mycontract.sol,0,1,0,0,0,0,1,0,1,Access control risk: use of tx.origin which can be exploited under certain conditions. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size.
wallet_02_refund_nosub.sol,0,0,1,0,1,0,1,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
BECToken.sol,0,0,1,0,1,0,1,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
guess_the_random_number.sol,0,0,1,0,0,1,1,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Risks due to bad randomness; block properties used for randomness can be manipulated by miners. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
integer_overflow_multitx_onefunc_feasible.sol,0,0,1,0,0,0,0,0,0,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath."
0xe894d54dca59cb53fe9cbc5155093605c7068220.sol,1,0,1,1,1,0,1,0,1,"Potential reentrancy vulnerability detected due to use of .call() in combination with state changes. | Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Unchecked return values from low-level calls (.call(), .send()) which may fail silently. | Possible Denial of Service (DoS) vulnerability due to loops that could run indefinitely or consume excessive gas. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
simple_dao.sol,0,0,1,0,0,0,0,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential short address attack due to direct use of address type without checking the input size."
0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol,0,0,1,0,0,0,0,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential short address attack due to direct use of address type without checking the input size."
0x806a6bd219f162442d992bdc4ee6eba1f2c5a707.sol,0,0,0,0,0,0,1,0,1,Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size.
simple_suicide.sol,0,0,0,0,0,0,0,0,0,No vulnerabilities detected.
mapping_write.sol,0,0,1,0,0,0,1,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential for front running: external calls that might allow attackers to benefit from seeing pending transactions. | Potential short address attack due to direct use of address type without checking the input size."
0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol,0,0,1,0,0,0,0,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential short address attack due to direct use of address type without checking the input size."
0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol,0,0,1,0,0,0,0,0,1,"Potential arithmetic issues detected (e.g., overflows or underflows) due to operations on uint types without SafeMath. | Potential short address attack due to direct use of address type without checking the input size."
